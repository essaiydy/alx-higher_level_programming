#7-base_geometry.txt

===============================================
how to 7-base_geometry.txt
===============================================

this module defines a fuction that validate value``def integer_validator(self, name, value)``

=========

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
	...
TypeError: name must be an integer

>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
	...
ValueError: name must be greater than 0

>>> bg.integer_validator("name", -5)
Traceback (most recent call last):
	...
ValueError: name must be greater than 0

>>> bg.integer_validator("name", 5.4)
Traceback (most recent call last):
        ...
TypeError: name must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
        ...
TypeError: name must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name")
Traceback (most recent call last):
        ...
TypeError: name must be an integer
